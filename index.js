const express = require('express');
const translateWrapper = require('./azureTranslateWrapper');
require('dotenv').config();

const app = express();
const port = 3000;

const swaggerJsdoc = require('swagger-jsdoc');
const swaggerUi = require('swagger-ui-express');

const options = {
    swaggerDefinition: {
        info: {
            title: 'Translation API',
            version: '1.0.0',
            description: 'An API to translate a given sentence from one language to another.'
            
        },
        host: 'localhost:3000',
        basePath: '/',
    },
    apis: ['./index.js'],
    explorer: true,
};


const specs = swaggerJsdoc(options);
app.use('/docs', swaggerUi.serve, swaggerUi.setup(specs));

app.use(express.json());

/**
 * @swagger
 * tags:
 * name: Translator
 * description: The translation API
 */


/**
 * @swagger
 * /translate:
 *    post:
 *      description: A wrapper API for translating the text provided.
 *      consumes:
 *          - application/json
 *      parameters:
 *          - in: body
 *            name: Input
 *            description: The JSON for translation. In the request body generated by 'Try it out' option, replace the first "string" with your text and replace the second "string" with the desired language you want to translate your text in.
 *            schema:
 *              type: object
 *              required:
 *                - text
 *              properties:
 *                text:
 *                  type: string
 *                language:
 *                  type: string
 *      produces:
 *          - application/json
 *      responses:
 *          200:
 *              description: Translated text
 */
app.post('/translate', async(req, res) => {
    var text = req.body.text;
    var language = req.body.language;

    // Check if 'text' and 'language' are strings
    if (typeof text !== 'string' || typeof language !== 'string') {
        return res.status(400).json({
            status: 'error',
            errorCode: 'INVALID_INPUT',
            errorMessage: 'Both text and language must be strings.',
        });
    }

    // Check that 'text' contains only alphabets
    if (/\d/.test(text)) { // Matches only alphabetic characters
        return res.status(400).json({
            status: 'error',
            errorCode: 'INVALID_TEXT',
            errorMessage: 'Text must not contain any digits (0-9).',
        });
    }

    await translateWrapper.translate(text, language)
        .then(result => {
            res.status(200);
            var result = {
                "status": "success",
                "summary": result,
            }
            res.json(result);
        }).catch((ex) => {

            res.status(400);
            var result = {
                "status": "error",
                    'errorCode':ex.code,
                    "errorMessage": ex.message,
                }
                res.json(result);
          });
});

app.listen(port, () => {
    console.log(`Server listening at http://localhost:${port}`)
});